@page "/UserRequests"
@using PetShelter.Data

@inject AuthenticationStateProvider GetAuthenticationStateAsync
@inject UserRequestsService UserRequestsService


<h2>My Requests</h2>


<h3>Adoptions</h3>
<div class="container">
    <div class="row">
        @if (_adoptions!.Count == 0)
        {
            <p>
                There are no requested adoptions.
            </p>
        }
        @foreach (var pet in _adoptions)
        {
            <UserRequestsCard Pet=@pet.Item1 Status=@pet.Item2/>
        }
    </div>
</div>
<h3>Deliveries</h3>
<div class="container">
    <div class="row">
        @if (_deliveries!.Count == 0)
        {
            <p>
                There are no requested deliveries.
            </p>
        }
        @foreach (var pet in _deliveries)
        {
            <UserRequestsCard Pet=@pet.Item1 Status=@pet.Item2/>
        }
    </div>
</div>

@code {

    private string? _userId;
    private List<Tuple<Pet, Status>>? _adoptions;
    private List<Tuple<Pet, Status>>? _deliveries;


    protected override async Task OnInitializedAsync()
    {
        var user = (await GetAuthenticationStateAsync.GetAuthenticationStateAsync()).User;
        _userId = user.FindFirst(u => u.Type.Contains("nameidentifier"))?.Value;

        _adoptions = UserRequestsService.GetAdoptions(_userId);

        _deliveries = UserRequestsService.GetDeliveries(_userId);
    }

}