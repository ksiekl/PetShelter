@page "/ThrowAways"
@using PetShelter.Data
<h3 class="text-center">Give pet into the care of our shelter!</h3>
<PageTitle>Deliver pet</PageTitle>
@inject IWebHostEnvironment Environment

<h3>Delivery Request</h3>


@inject AuthenticationStateProvider GetAuthenticationStateAsync
@inject NavigationManager NavManager
@inject DeliveryService DeliveryService

<EditForm Model="@_delivery" OnValidSubmit="@HandleValidSubmit">
    <ObjectGraphDataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="col-3 row">
        <div class="col-12 row p-3">
            <label class="col-12 font-weight-bold">Day of your delivery: </label>
            <InputDate class="form-control col-3" @bind-Value="_delivery.DateOfDelivery"/>
        </div>
        <br/>
        <div class="col-12 row p-3">
            <label class="col-12 font-weight-bold">Name of pet: </label>
            <InputText class="form-control col-3" @bind-Value="_delivery.NewPet.Name" placeholder="Dunčo"/>
        </div>
        <br/>
        <div class="col-12 row p-3">
            <label class="col-12 font-weight-bold">Species: </label>
            <InputText class="form-control col-3" @bind-Value="_delivery.NewPet.Type"/>
        </div>
        <br/>
        <div class="col-12 row p-3">
            <label class="col-12 font-weight-bold">Breed: </label>
            <InputText class="form-control col-3" @bind-Value="_delivery.NewPet.Breed" placeholder="Chiuaua"/>
        </div>
        <br/>
        <div class="col-12 row p-3">
            <label class="col-12 font-weight-bold">Age: </label>
            <InputNumber class="form-control col-3" @bind-Value="_delivery.NewPet!.Age" placeholder="10"/>
        </div>
        <br/>
        <div class="col-12 row p-3">
            <label class="col-12 font-weight-bold">Brief description of your pet: </label>
            <InputText class="form-control col-3" @bind-Value="_delivery.NewPet.Description" placeholder="Has anxiety."/>
        </div>
        <br/>
        <div class="col-12 row p-3">
            <label class="col-12 font-weight-bold">Picture: </label>
            <InputFile OnChange="@OnInputFileChanged" @bind-Value="_delivery.NewPet!.Picture"/>
        </div>
        <br/>
        <div class=" col-12 row p-3">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
    </div>
    <br/>

</EditForm>


@code {
    private Delivery _delivery = new();

    public string? UserId { get; set; }


    protected override async void OnInitialized()
    {
        _delivery.NewPet = new Pet();
        _delivery.NewPet.Picture = "";

        var user = (await GetAuthenticationStateAsync.GetAuthenticationStateAsync()).User;
        var userId = user.FindFirst(u => u.Type.Contains("nameidentifier"))?.Value;
        UserId = userId;
    }

    private async Task HandleValidSubmit()
    {
        _delivery.Status = Status.Requested;
        _delivery.UserId = UserId;
        _delivery.NewPet!.UserId = UserId;

        await DeliveryService.AddDelivery(_delivery);

        NavManager.NavigateTo("/SuccessfulDelivery");
        _delivery = new Delivery();
        _delivery.NewPet = new Pet();
    }

    //Works only for pictures <= 512 kB

    private async Task OnInputFileChanged(InputFileChangeEventArgs args)
    {
        var path = Path.Combine(Environment.ContentRootPath, "wwwroot", "upload", args.File.Name);
        await using FileStream fs = new(path, FileMode.Create);
        await args.File.OpenReadStream().CopyToAsync(fs);
        _delivery.NewPet!.Picture = Path.Combine("https://localhost:7214/", "upload", args.File.Name);
    }

}